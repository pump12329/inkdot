# InkDot - Trae AI 开发规则

## 项目概述
InkDot 是基于思维导图的创意创作平台，集成 AI 功能，支持小说创作、跑团、文字冒险等多种创作模式。

## 技术栈
- **前端**: Vue 3 + TypeScript + Pinia + Vite
- **AI集成**: DeepSeek API + OpenRouter API
- **测试**: Vitest + Vue Test Utils
- **存储**: SQLite + JSON + 本地存储

## 核心开发规范

### TypeScript 规范
- 严格模式 `"strict": true`
- 明确返回类型，避免 `any`
- 优先使用 `type` 而不是 `interface`

```typescript
type MindMapNode = {
  id: string;
  content: string;
  position: { x: number; y: number };
}

function createNode(data: Partial<MindMapNode>): MindMapNode {
  return {
    id: generateId(),
    content: data.content || '',
    position: data.position || { x: 0, y: 0 }
  };
}
```

### Vue 3 规范
- 使用 Composition API 和 `<script setup>`
- 组件名使用 PascalCase
- Props 使用 `defineProps`，Emits 使用 `defineEmits`
- 组件职责单一，避免深层嵌套

```vue
<script setup lang="ts">
import { ref } from 'vue'
import type { MindMapNode } from '@/types'

interface Props {
  node: MindMapNode
  editable?: boolean
}

const props = withDefaults(defineProps<Props>(), {
  editable: false
})

const emit = defineEmits<{
  update: [node: MindMapNode]
}>()
</script>
```

### 文件命名
- 组件: `MindMapNode.vue`
- 工具函数: `nodeUtils.ts`
- 类型定义: `mindMapTypes.ts`
- 常量: `API_CONSTANTS.ts`

## 设计原则
- **极简主义**: 黑白灰配色，充足留白
- **3次点击原则**: 任何功能最多3次点击到达
- **渐进披露**: 高级功能默认隐藏，按需显示
- **智能默认**: 合理的默认设置

## 状态管理
使用 Pinia，按功能模块划分 Store，保持简洁：

```typescript
export const useMindMapStore = defineStore('mindMap', () => {
  const nodes = ref<MindMapNode[]>([])
  const selectedNodeId = ref<string | null>(null)

  function addNode(node: MindMapNode) {
    nodes.value.push(node)
  }

  return { nodes, selectedNodeId, addNode }
})
```

## Git 规范
```
feat: 新功能
fix: 修复bug
docs: 文档更新
style: 代码格式
refactor: 重构
test: 测试
chore: 构建工具

示例: feat(mindmap): 添加节点拖拽功能
```

## Trae AI 工具使用
- **语义搜索**: 使用 `search_codebase` 快速定位代码
- **批量查看**: 使用 `view_files` 查看多个文件
- **精确编辑**: 使用 `edit_file_fast_apply` 高效修改
- **任务管理**: 使用 `todo_write` 管理任务进度

## 开发原则
1. **渐进式开发**: 先实现核心功能，再添加高级特性
2. **用户体验优先**: 界面简洁直观，操作流程简化
3. **性能与简洁平衡**: 在性能和代码简洁性间找到平衡
4. **AI 辅助**: AI 功能增强而非替代用户创造力

## 快速命令
```bash
npm run dev        # 开发服务器
npm run build      # 生产构建
npm run test       # 运行测试
npm run lint       # 代码检查
```

**记住**: 简单就是美，简洁就是力量。