---
description: Vue 3 + TypeScript 核心开发规范
alwaysApply: true
---

# 前端开发规范

## Vue 3 核心规范
- **Composition API**：使用 `<script setup>` 语法
- **组件命名**：PascalCase
- **Props/Emits**：使用 `defineProps` 和 `defineEmits`
- **响应式数据**：`ref/reactive` 管理
- **组件职责**：单一职责，避免深层嵌套

## TypeScript 核心规范
- **严格模式**：`"strict": true`
- **明确类型**：所有函数有明确返回类型
- **避免 any**：使用具体类型或泛型
- **接口定义**：清晰的类型结构

```typescript
interface MindMapNode {
  id: string;
  content: string;
  position: { x: number; y: number };
}

function createNode(data: Partial<MindMapNode>): MindMapNode {
  return {
    id: generateId(),
    content: data.content || '',
    position: data.position || { x: 0, y: 0 }
  };
}
```

## 文件命名
- 组件：`MindMapNode.vue`
- 工具函数：`nodeUtils.ts`
- 类型定义：`mindMapTypes.ts`
- 常量：`API_CONSTANTS.ts`

## 设计原则
- **极简主义**：黑白灰配色，充足留白
- **3次点击原则**：任何功能最多3次点击到达
- **响应式设计**：桌面端完整，移动端精简
- **无障碍支持**：键盘导航和屏幕阅读器
